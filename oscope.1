.\" This file Copyright (C) 1994 Jeff Tranter (Jeff_Tranter@Mitel.COM)
.\"           Copyright (C) 1996 Tim Witham (twitham@pcocd2.intel.com)
.\"
.\" It may be distributed under the GNU Public License, version 2, or
.\" any higher version.  See section COPYING of the GNU Public license
.\" for conditions under which this file may be redistributed.
.\"
.\" @(#)$Id: oscope.1,v 1.3 1996/01/03 06:16:21 twitham Exp $

.TH SCOPE 1 "January 3  1996" "Linux" "User Commands"
.SH NAME
scope \- Software Oscilloscope
.SH SYNOPSIS
scope [-1|-2] [-r<rate>] [-s <scale>] [-c<colour>] [-t<trigger>] \
[-m<mode>] [-d<dma divisor>] [-p|-l] [-g] [-b] [-v]

.SH DESCRIPTION

.B Scope
is a simple software emulation of an oscilloscope. It graphically
displays voltage as a function of time. The input is via a sound card
using the kernel sound device /dev/dsp.

The svgalib library is used to implement a real-time waveform display.

.PP
.SH "COMMAND\-LINE OPTIONS"
Use
.B scope -h
(an invalid option) to produce a usage message showing these options,
their default values, and key equivalents.  All options can be
interactively changed, see the
.B RUN-TIME CONTROLS
section below.

.TP 0.5i
.B -1
.TP 0.5i
.B -2
These options are mutually exclusive. In single channel mode (-1), one
of the audio channels is sampled and plotted.  In dual channel mode
(-2), both audio channels are sampled and plotted in two colors.  Dual
channel mode is slower.

.TP 0.5i
.B -r <rate>
Specify the sampling rate in samples per second. The upper and lower
limits depend on the sound card you have.

.TP 0.5i
.B -s <scale>
Sets the time scale factor in number of horizontal pixels per sample.
This can be 1, 2, 4, 8, or 16.

.TP 0.5i
.B -t <trigger>
Sets the trigger level.
.B scope
will wait until it receives a signal "edge" at this level. It should
be in the range 0 - 255.  -1 causes
.B scope
to run without waiting for a trigger. Note that the top of the display
is 0, the bottom is 255, and the midpoint is 128.

.TP 0.5i
.B -c <colour>
Sets the channel 1 trace colour. The colours available depend on the
graphics mode selected.  Channel 2 is drawn in colour+1 and the
graticule is drawn in colour+2.

.TP 0.5i
.B -m <mode>
Sets the graphics mode to use. The modes are listed in the svgalib
header file "vga.h". If you select a graphics mode with a vertical
resolution of less than 255 you may not be able to display the entire
waveform. Don't use graphics modes that are not supported by your
monitor.

.TP 0.5i
.B -d <dma divisor>
Sets the divisor for DMA buffer size. Valid numbers are 1, 2, or 4.
The kernel sound driver will divide it's DMA buffer by this factor.
The value 4 usually gives the fastest display rate.

.TP 0.5i
.B -p
.TP 0.5i
.B -l
These options are mutually exclusive. In point mode (-p) the graph is
shown as individual data points. In line mode (-l) the points are
joined using lines. Line mode gives a better display, but is somewhat
slower than point mode.

.TP 0.5i
.B -g
Toggles a graticule.  This draws a frame around the waveform and adds
a time scale.  The time scale is always 5 millisecond major divisions
and 1 millisecond minor divisions.  The minor divisions in turn have
micro divisions at 0.1 millisecond.  If trigger is enabled, a small
tick mark is also shown on the graticule corresponding to the trigger
level.  This option slows the display down but is needed to read a
time period or frequency.

.TP 0.5i
.B -b
Toggles whether the graticule is drawn behind or in front of the
signals.  Obviously has no effect if the graticule is not on.

.TP 0.5i
.B -v
Toggles
.B scope
verbose mode.  Key press and option information is displayed on
standard output.

.PP
.SH "RUN\-TIME CONTROLS"
.PP

While the program is running, it accepts the following single key
commands:

.TP 0.5i
.B 1/2
Toggle single/dual channel mode.  Single channel mode is faster.

.TP 0.5i
.B R/r
Increase/decrease sampling rate 10%.  Use this to give the signals
more or less detail.  This also stretches or shrinks the time scale on
the graticule.

.TP 0.5i
.B S/s
Increase/decrease time scale by a factor of 2.  Use this to zoom
in/out or to get a more readable graticule.  Increasing scale speeds
up the display considerably.

.TP 0.5i
.B T/t
Increase/decrease trigger level 10 units.  Use this to stabilize a
"moving" waveform.  Pushing the trigger level beyond the limit of the
signal will cause the display to "freeze" as it waits for trigger.  In
this state, each key press will force a trigger.  Pushing the trigger
off the vertical axis will disable the trigger.  Pressing
.B T/t
once again will re-enable the trigger at mid-scale.

.TP 0.5i
.B C/c
Increment/decrement colour used.  This could make the display easier
to see.

.TP 0.5i
.B M/m
Increment/decrement video mode.  USE WITH CAUTION; using video modes
not supported by your video card or monitor will not work.

.TP 0.5i
.B D/d
Increase/decrease DMA divisor.  The higher values will usually give
the fastest display rate.

.TP 0.5i
.B P/L/p/l
Toggle point/line mode.  Use this to speed up/slow down the display or
to better visualize the signals.

.TP 0.5i
.B G/g
Toggle on/off graticule.  Turning off the graticule speeds up the
display.

.TP 0.5i
.B B/b
Toggle graticule behind/in front of signals.

.TP 0.5i
.B V/v
Toggle verbose usage log on/off to stdout.  The verbose log shows one
line of current sampling rate and options for each key pressed.

.TP 0.5i
.B <space>
Pause the display until another key is pressed.  Use this to "freeze"
the display.

.TP 0.5i
.B Q/q
Quit the program.

.SH EXAMPLES
.TP 0.5i
.B scope -r 44000 -l -t 128

This runs
.B scope
at a 44kHz sampling rate, in line mode, with a trigger set at
mid-scale.

.SH PORTABILITY
.B Scope
was written specifically for Linux, and uses the Linux sound driver
and svgalib plotting routines. Obviously you need a sound card, VGA
graphics, and the Linux kernel sound drivers.

.SH BUGS/LIMITATIONS
.PP
This should be considered BETA software.  It was basically written for
fun but may actually be useful for audio frequencies only. It may have
bugs, and it could use a better user interface. Unfortunately, adding
anything to the display (controls, etc...) would slow it down
considerably.

Because it uses svgalib,
.B scope
must be run as root or setuid to root.

The display will probably not be able to keep up at higher sampling
rates, depending on your sound card, graphics card, and processor
speed. No floating point math is used, so a math coprocessor doesn't
make any difference.

You have to use an external mixer program to select the input source
device, level, etc... (if you use a microphone the default should
work).

I can think of a bunch of enhancements that might be fun to add: 16
bit, single shot mode, envelope mode, spectrum analyzer (FFT) mode,
graphical controls (mouse), and storage mode (with waveform
save/load), but it would probably run too slowly.

.SH AUTHOR
.B Scope
was written by Jeff Tranter (Jeff_Tranter@Mitel.COM) and later
enhanced by Tim Witham (twitham@pcocd2.intel.com).
.B Scope
is released under the conditions of the GNU General Public License.
See the file COPYING and notes in the source code for details.
