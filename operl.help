
	      Arbitrary signal math with Perl functions

Variables available for your function ($0, $1 and $2 are not standard Perl):

$1      channel 1 input
$2      channel 2 input
$0      output: '$0 = ' is assumed before your function; don't use $0
@1      channel 1 "memory", $1[0] = previous sample, $1[1] = one before that
@2      channel 2 "memory",         ... all the way to sample length
@0      output "memory", $0[0] = previous function output calculation, ...
$t      sample number, or "time", 0=left edge or trigger point
$pi     a constant: 3.14159265359, for your trigonometric convenience

                          Example functions

Functions of channel 1 (would also work for channel 2):

abs($1)                         # rectify (absolute value)
-$1                             # negate (invert)
$1 - $1[0]                      # integral or rate of change since last sample
$1 - $1[2]                      # same but over more time (3 sample periods)
$1 + 32                         # add a "DC offset" of 32 sample units
$t > 43 ? $1[43] : 0            # delay by 1 msec @ 44000 S/s = 44th sample

Functions of both channel 1 and channel 2:

$1 * $2                         # multiply 1 * 2
$1 / ($2 || 1)                  # divide 1 / 2, avoiding divide by 0 error
$2 / ($1 || 1)                  # divide 2 / 1
$1 > $2 ? $1 : $2               # max(1, 2)
$1 < $2 ? $1 : $2               # min(1, 2)
$1 + $2                         # sum, like the oscope builtin
$1 - $2                         # diff, like the oscope builtin
($1 + $2) / 2                   # average, like the oscope builtin

Time position ($t) functions, independent of channel 1 and 2 inputs:

$t / 88 % 2 ? 64 : -64          #  250 Hz square wave (88 = 44000 / 2 /  250)
sin($t * $pi / 44) * 64         #  500 Hz    sin wave (44 = 44000 / 2 /  500)
cos($t * $pi / 22) * 64         # 1000 Hz cosine wave (22 = 44000 / 2 / 1000)

Low-pass filter: a difference equation of previous input and output:

1.899105 * $0[0] - .901531 * $0[1] + .001213 * ($1 + $1[1] + 2 * $1[0])
